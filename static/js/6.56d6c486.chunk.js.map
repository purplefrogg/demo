{"version":3,"sources":["components/Login/Login.jsx"],"names":["input","inputElement","maxLength100","maxLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","type","connect","state","isAuth","auth","login","props","to","className","formData","email","password","rememberMe"],"mappings":"wKAQMA,EAAQC,YAAa,SACrBC,EAAeC,YAAiB,KAmBhCC,EAAiBC,YAAU,CAC7BC,KAAM,SADaD,EAhBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAC9B,OACI,uBAAMC,SAAUF,EAAhB,UACKG,YAAY,QAAQV,EAAO,CAACW,IAAUT,GAAc,SACpDQ,YAAY,WAAWV,EAAO,CAACW,IAAUT,GAAc,WAAY,CAACU,KAAK,aAF9E,cAIKF,YAAY,aAAcV,EAAO,KAAK,KAAM,CAACY,KAAK,aAClDJ,GAAS,8BACLA,IAEL,8BACI,mDA6BDK,uBAJQ,SAACC,GAAD,MAAY,CAC/BC,OAAQD,EAAME,KAAKD,UAGiB,CAAEE,WAA3BJ,EApBD,SAACK,GAKX,OAAGA,EAAMH,OACE,cAAC,IAAD,CAAUI,GAAI,aAGrB,gCACI,qBAAKC,UAAU,GAAf,mBACA,cAAChB,EAAD,CAAgBK,SAVP,SAACY,GAAc,IACtBC,EAAgCD,EAAhCC,MAAOC,EAAyBF,EAAzBE,SAAUC,EAAeH,EAAfG,WACvBN,EAAMD,MAAMK,EAAOC,EAAUC","file":"static/js/6.56d6c486.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { reduxForm } from 'redux-form';\nimport { login } from '../../redux/auth-Reducer';\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\nimport { createField, inputElement } from '../common/FormsControls/FormsControls';\n\nconst input = inputElement(\"input\")\nconst maxLength100 = maxLengthCreator(100)\n\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit} >\n            {createField(\"email\",input, [required, maxLength100],\"email\")}\n            {createField(\"password\",input, [required, maxLength100],\"password\", {type:\"password\"})}\n            remember me\n            {createField(\"rememberMe\", input, null,null, {type:\"checkbox\"})}\n            {error && <div>\n                {error}\n                </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\nconst LoginReduxForm = reduxForm({\n    form: 'login'\n})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        let { email, password, rememberMe } = formData\n        props.login(email, password, rememberMe)\n    }\n    if(props.isAuth){\n        return <Redirect to={'/Profile'} />\n    }\n    return (\n        <div>\n            <div className=\"\">Login</div>\n            <LoginReduxForm onSubmit={onSubmit} />\n\n        </div>\n    )\n}\nconst mapStateToProps =(state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, { login })(Login)"],"sourceRoot":""}