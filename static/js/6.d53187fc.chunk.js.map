{"version":3,"sources":["components/Login/Login.jsx"],"names":["input","inputElement","maxLength100","maxLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","error","captcha","onSubmit","createField","required","type","src","alt","connect","state","isAuth","auth","login","props","to","className","formData","email","password","rememberMe"],"mappings":"gLAQMA,EAAQC,YAAa,SACrBC,EAAeC,YAAiB,KAoBhCC,EAAiBC,YAAU,CAC7BC,KAAM,SADaD,EAjBL,SAAC,GAA8C,IAA7CE,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,QAAuB,kDAC5D,OACI,uBAAMC,SAAUH,EAAhB,UACKI,YAAY,QAAQX,EAAO,CAACY,IAAUV,GAAc,SACpDS,YAAY,WAAWX,EAAO,CAACY,IAAUV,GAAc,WAAY,CAACW,KAAK,aAF9E,cAIKF,YAAY,aAAcX,EAAO,KAAK,KAAM,CAACa,KAAK,aAClDJ,GAAY,qBAAKK,IAAKL,EAASM,IAAI,KACnCN,GAAYE,YAAY,UAAWX,EAAO,CAACY,KAAW,MAEtDJ,GAAS,8BAAMA,IAChB,8BACI,mDA8BDQ,uBALQ,SAACC,GAAD,MAAY,CAC/BC,OAAQD,EAAME,KAAKD,OACnBT,QAASQ,EAAME,KAAKV,WAGgB,CAAEW,WAA3BJ,EArBD,SAACK,GAKX,OAAGA,EAAMH,OACE,cAAC,IAAD,CAAUI,GAAI,aAGrB,gCACI,qBAAKC,UAAU,GAAf,mBACA,cAACnB,EAAD,CAAgBM,SAVP,SAACc,GAAc,IACtBC,EAAyCD,EAAzCC,MAAOC,EAAkCF,EAAlCE,SAAUC,EAAwBH,EAAxBG,WAAYlB,EAAYe,EAAZf,QACnCY,EAAMD,MAAMK,EAAOC,EAAUC,EAAYlB,IAQDA,QAASY,EAAMZ","file":"static/js/6.d53187fc.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { reduxForm } from 'redux-form';\nimport { login } from '../../redux/auth-Reducer';\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\nimport { createField, inputElement } from '../common/FormsControls/FormsControls';\n\nconst input = inputElement(\"input\")\nconst maxLength100 = maxLengthCreator(100)\n\n\nconst LoginForm = ({handleSubmit, error, captcha, ...props}) => {\n    return (\n        <form onSubmit={handleSubmit} >\n            {createField(\"email\",input, [required, maxLength100],\"email\")}\n            {createField(\"password\",input, [required, maxLength100],\"password\", {type:\"password\"})}\n            remember me\n            {createField(\"rememberMe\", input, null,null, {type:\"checkbox\"})}\n            {captcha &&  <img src={captcha} alt=\"\"/>}\n            {captcha &&  createField(\"captcha\", input, [required], null)}\n               \n            {error && <div>{error}</div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\nconst LoginReduxForm = reduxForm({\n    form: 'login'\n})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        let { email, password, rememberMe, captcha } = formData\n        props.login(email, password, rememberMe, captcha)        \n    }\n    if(props.isAuth){\n        return <Redirect to={'/Profile'} />\n    }\n    return (\n        <div>\n            <div className=\"\">Login</div>\n            <LoginReduxForm onSubmit={onSubmit} captcha={props.captcha}/>\n\n        </div>\n    )\n}\nconst mapStateToProps =(state) => ({\n    isAuth: state.auth.isAuth,\n    captcha: state.auth.captcha\n})\n\nexport default connect(mapStateToProps, { login })(Login)"],"sourceRoot":""}