{"version":3,"sources":["api/api.ts","components/hoc/withAuthRedirect.js","redux/message-Reduser.ts","api/usersApi.ts","utils/object-Helpers.ts","redux/users-Reducer.ts","api/profileApi.ts","redux/profile-Reducer.ts","components/common/Preloader/preloader.module.scss","components/Header/Header.module.scss","reportWebVitals.js","redux/app-Reducer.ts","redux/news-Reducer.ts","components/common/Post/Post.tsx","components/Pages/News/News.tsx","components/Pages/News/NewsConteiner.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Pages/Navbar/NavbarItem.tsx","components/Pages/Navbar/Navbar.tsx","redux/redux-store.ts","components/hoc/withSuspense.js","App.tsx","index.js","components/common/Post/Post.module.scss","api/authApi.ts","redux/auth-Reducer.ts","components/Pages/Navbar/Navbar.module.scss","components/Pages/News/News.module.scss","components/common/Preloader/preloader.tsx","App.module.scss","components/common/FormsControls/FormsControls.tsx","utils/validators/validators.ts","components/common/FormsControls/FormsControls.module.scss"],"names":["ResultCodeEnum","ResultCodeCaptchaEnum","instance","axios","create","baseURL","withCredentials","headers","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DELETE_MESSAGE","ADD_MESSAGE","initialState","chats","id","name","icon","messages","text","addMessage","type","messageReducer","action","length","filter","m","userId","usersApi","page","count","friend","term","get","then","res","data","delete","post","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalCount","isFetching","isFollowing","actions","payload","requestUsers","dispatch","a","response","follow","resultCode","unfollow","usersReducer","followed","profileApi","status","put","photo","formData","FormData","append","profile","photos","getUserProfile","savePhoto","saveProfile","getState","stopSubmit","_error","Promise","reject","getStatus","updateStatus","success","alert","profileReducer","module","exports","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialized","appReducer","ADD_POST","posts","idProfile","author","img","newsReducer","undefined","Post","className","style","header","src","alt","image","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","addPost","createField","Textarea","required","maxLength100","btnPost","News","PostItems","NewsPage","mapDispatchToProps","compose","news","Header","header__logo","header__menu","header__item","activeClassName","active","link","authTrue","onClick","logout","NavbarItem","navbar__label","label","Navbar","memo","navbar","navbar__list","rootReducer","combineReducers","messenger","profilePage","usersPage","authReducer","app","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","MessengerConteiner","lazy","Users","ProfileConteiner","Login","App","catchAllUnhandledErrors","e","initializeApp","addEventListener","removeEventListener","wrapper","body","content","exact","path","render","NewsConteiner","AppContainer","withRouter","promise","GetAuthUserData","all","MainApp","ReactDOM","document","getElementById","authApi","email","password","rememberMe","captcha","login","captchaIsRequired","getCaptcha","message","url","Preloader","ldsDualRing","inputElement","InputType","input","meta","restProps","hasError","touched","error","inputForm","component","validators","placeholder","validate","Input","maxLength","value"],"mappings":"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","file":"static/js/main.c334e51c.chunk.js","sourcesContent":["import axios from \"axios\"\n\nexport const instance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {\n        \"API-KEY\": \"11592067-90bf-45e8-8dde-1063580dfd68\"\n    }\n})\n\n\nexport enum ResultCodeEnum {\n    success = 0,\n    error = 1\n}\nexport enum ResultCodeCaptchaEnum {\n    captchaIsRequired = 10\n}\n\nexport type GetItemsType<T> = {\n    items: Array<T>\n    totalCount: number\n    error: string | null\n}\nexport type APIResponseType<D = {}, RS = ResultCodeEnum> = {\n    data: D\n    resultCode: RS\n    messages: Array<string>\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\n\nlet mapStateToProps = (state) => {\n\treturn {\n\t\tisAuth: state.auth.isAuth\n\t}\n}\n\nconst withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (this.props.isAuth === false) { return <Redirect to='/Login' /> }\n            return (<Component {...this.props} />)\n        }\n    }\n\n    let connectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n    return connectedRedirectComponent\n}\nexport default withAuthRedirect","const DELETE_MESSAGE = 'message/DELETE_MESSAGE'\nconst ADD_MESSAGE = 'message/ADD-MESSAGE'\n\n\nexport type ChatsType = {\n    id: number\n    name: string\n    icon: string\n}\nexport type MessagesType = {\n    id: number\n    text: string\n}\n\nexport type InitialStateType = {\n    chats: Array<ChatsType>\n    messages: Array<MessagesType>\n}\n\nlet initialState: InitialStateType = {\n    chats: [\n        { id: 1, name: 'Trish Una', icon: 'https://sun9-34.userapi.com/impf/c845420/v845420775/bafaa/hP5ZTk4e-O0.jpg?size=200x200&quality=96&proxy=1&sign=c915e9a943591bf8db59656c689429e4&type=album' },\n        { id: 2, name: 'Josuke Higashikata', icon: 'https://sun9-46.userapi.com/impf/c847124/v847124775/b8f1c/vqovdaYXuwY.jpg?size=250x250&quality=96&proxy=1&sign=9a228fea6ba6a978a4828d27a37a8736&type=album' },\n        { id: 3, name: 'Noriaki Kakyoin', icon: 'https://sun9-8.userapi.com/impf/VHbDZu94RuZOKsTEWBlDda1394KyuywrHKBarQ/fH9OqEmXIyA.jpg?size=339x338&quality=96&proxy=1&sign=53744df87aa471c68f971bc36a375b91&type=album' },\n        { id: 4, name: 'Kira Yoshikage', icon: 'https://i.pinimg.com/474x/0a/8c/de/0a8cde733252ac8941f1210f1299e295.jpg' },\n        { id: 5, name: 'Joseph Joestar', icon: 'https://i.pinimg.com/474x/1d/ed/7c/1ded7cf734a605f6d18f699abf7d9eaa.jpg' },\n        { id: 6, name: 'bruno buccerati', icon: 'https://i.pinimg.com/474x/fd/91/db/fd91dbc2886555e0f9a8832171959784.jpg' },\n        { id: 7, name: 'DIO', icon: 'https://pbs.twimg.com/profile_images/1026856822492352512/ZEig1q14_400x400.jpg' },\n        { id: 8, name: 'kakashi hatake', icon: 'https://i.pinimg.com/originals/32/62/8c/32628c0b689967a8c044a35f8217d838.jpg' },\n        { id: 9, name: 'Hisoka', icon: 'https://i.pinimg.com/564x/fc/0a/ec/fc0aec5184be7873b54ccb0a375e632c.jpg' },\n    ],\n    messages: [\n        { id: 0, text: 'who are you' },\n        { id: 1, text: 'I am DIO BRANDO' },\n        { id: 2, text: 'who are you' },\n        { id: 3, text: 'I am DIO BRANDO' },\n    ],\n}\n\nconst messageReducer = (state = initialState, action: any):InitialStateType => {\n    switch (action.type) {\n        case ADD_MESSAGE:\n            return {\n                ...state,\n                messages: [...state.messages, {id: state.messages.length, text: action.text },\n                ],\n               \n            }\n        case DELETE_MESSAGE:\n            return {\n                ...state,\n                messages: state.messages.filter(m => m.id !== action.userId),\n            }\n        default:\n            return state;\n    }\n\n}\ntype AddMessageType = { type: typeof ADD_MESSAGE, text: string}\nexport const addMessage = (text: string): AddMessageType => ({ type: ADD_MESSAGE, text })\n\ntype DeleteMessageType = { type: typeof DELETE_MESSAGE, userId: number}\nexport const deleteMessage = (userId: number): DeleteMessageType => ({ type: DELETE_MESSAGE, userId })\n\nexport default messageReducer","import { UserType } from \"../redux/users-Reducer\";\nimport { GetItemsType, instance, APIResponseType } from \"./api\";\n\n\n\nexport const usersApi = ({\n    getUsers(page: number, count: number, friend: null | boolean = null, term='') {\n        return instance.get<GetItemsType<UserType>>(`users?page=${page}&count=${count}` +\n        (term ? `&term=${term}` : '') + (friend === null ? '' : `&friend=${friend}`) )\n        .then(res => {\n            return res.data\n        })\n    },\n    followDelete(id: number) {\n        return instance.delete(`follow/${id}`).then(res => res.data) as Promise<APIResponseType>\n    },\n    followPost(id: number) {\n        return instance.post<APIResponseType>(`follow/${id}`).then(res => res.data)\n    }\n});\n","\nexport const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\n    return items.map((u: any) => {\n        if (u[objPropName] === itemId) {\n            return { ...u, ...newObjProps }\n        }\n        return u\n    })\n}","import { usersApi } from \"../api/usersApi\"\nimport { updateObjectInArray } from \"../utils/object-Helpers\"\n\nimport { PhotosType } from \"./profile-Reducer\"\nimport { BaseThunkType, InferActionsTypes } from \"./redux-store\"\n\n\nexport type UserType = {\n    name: string\n    id: number\n    photos: PhotosType\n    status: string\n    followed: boolean\n    \n}\nexport type FilterType = {\n    term?: string\n    friend?: null | boolean\n}\n\nlet initialState = {\n    users: [] as Array<UserType>,\n    totalCount: 0 as number,\n    count: 100 as number,\n    page: 1 as number,\n    isFetching: true as boolean,\n    isFollowing: [] as Array<number>,\n    filter: {\n        term: '' ,\n        friend: null \n    } as FilterType,\n}\nconst usersReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'FOLLOW': {\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.id, \"id\", { followed: true })\n            }\n        }\n        case \"UNFOLLOW\": {\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.id, \"id\", { followed: false })\n            }\n        }\n        case 'SET_FILTER': {\n            return { ...state, filter: action.payload }\n        }\n        case 'SET_USERS': {\n            return { ...state, users: action.users }\n        }\n        case 'SET_CURRENT_PAGE': {\n            return { ...state, page: action.page }\n        }\n        case 'SET_TOTAL_COUNT': {\n            return { ...state, totalCount: action.totalCount }\n        }\n        case 'TOGGLE_IS_FETCHING': {\n            return { ...state, isFetching: action.isFetching }\n        }\n        case 'TOGGLE_IS_FOLLOWING': {\n            return {\n                ...state, isFollowing: action.isFetching\n                    ? [...state.isFollowing, action.id]\n                    : state.isFollowing.filter((id: number) => id !== action.id)\n            }\n        }\n        default:\n            return state;\n    }\n\n}\nexport const actions = {\n    followSuccess: (userId: number) => ({ type: 'FOLLOW', id: userId } as const),\n    unfollowSuccess: (userId: number) => ({ type: 'UNFOLLOW', id: userId } as const),\n    setUsers: (users: Array<UserType>,) => ({ type: 'SET_USERS', users } as const),\n    setFilter: (filter: FilterType) => ({ type: 'SET_FILTER', payload: filter } as const),\n    setCurrentPage: (page: number) => ({ type: 'SET_CURRENT_PAGE', page } as const),\n    setTotalCount: (totalCount: number) => ({ type: 'SET_TOTAL_COUNT', totalCount } as const),\n    toggleIsFetching: (isFetching: boolean) => ({ type: 'TOGGLE_IS_FETCHING', isFetching } as const),\n    toggleIsFollowing: (isFetching: boolean, userId: number) => ({ type: 'TOGGLE_IS_FOLLOWING', isFetching, id: userId } as const)\n}\n\n\nexport const requestUsers = (page: number, count: number, filter: FilterType): ThunkType =>\n    async (dispatch) => {\n        dispatch(actions.toggleIsFetching(true))\n        dispatch(actions.setCurrentPage(page));\n        dispatch(actions.setFilter(filter));\n\n        let response = await usersApi.getUsers(page, count, filter.friend, filter.term)\n        dispatch(actions.setUsers(response.items))\n        dispatch(actions.setTotalCount(response.totalCount))\n        dispatch(actions.toggleIsFetching(false))\n    }\n\nexport const follow = (id: number): ThunkType =>\n    async (dispatch) => {\n        dispatch(actions.toggleIsFollowing(true, id))\n        let response = await usersApi.followPost(id)\n\n        if (response.resultCode === 0) {\n            dispatch(actions.followSuccess(id))\n        }\n        dispatch(actions.toggleIsFollowing(false, id))\n    }\nexport const unfollow = (id: number): ThunkType => async (dispatch) => {\n    dispatch(actions.toggleIsFollowing(true, id))\n    let response = await usersApi.followDelete(id)\n    if (response.resultCode === 0) {\n        dispatch(actions.unfollowSuccess(id))\n    }\n    dispatch(actions.toggleIsFollowing(false, id))\n}\n\n\nexport default usersReducer\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actions>\ntype ThunkType = BaseThunkType<ActionsType>\n","import { PhotosType, ProfileType } from \"../redux/profile-Reducer\";\nimport { instance, APIResponseType } from \"./api\";\n\ntype SavePhotosResponseDataType = {\n    photos: PhotosType\n}\n\n\nexport const profileApi = ({\n    getProfile(userId: number) {\n        return instance.get<ProfileType>(`profile/` + userId).then(res => res.data)\n    },\n    getStatus(userId: number) {\n        return instance.get<string>(`profile/status/` + userId).then(res => res.data)\n    },\n    updateStatus(status: string) {\n        return instance.put<APIResponseType>(`profile/status/`, {\n            status: status\n        }).then(res => res.data)\n    },\n    updatePhoto(photo: File) {\n        let formData = new FormData();\n        formData.append('image', photo);\n        return instance.put<APIResponseType<SavePhotosResponseDataType>>(`profile/photo/`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }).then(res => res.data)\n    },\n    updateProfile(profile: ProfileType) {\n        return instance.put<APIResponseType<ProfileType>>(`profile`, profile).then(res => res.data)\n    }\n});\n","import { FormAction, stopSubmit } from \"redux-form\"\nimport { ResultCodeEnum } from \"../api/api\"\nimport { profileApi } from \"../api/profileApi\"\nimport { BaseThunkType, InferActionsTypes } from \"./redux-store\"\n\nlet initialState = {\n    profile: null as ProfileType | null,\n    status: \"\" as string,\n}\n\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'proflie/SET_USER_PROFILE':\n            return { ...state, profile: action.profile }\n        case 'proflie/SET_STATUS':\n            return {\n                ...state,\n                status: action.status\n            }\n        case 'profile/SET_PHOTOS':\n            return {\n                ...state, profile: { ...state.profile, photos: action.photos } as ProfileType\n            }\n        default:\n            return state\n    }\n}\n\nconst actions = {\n    setUserProfile: (profile: ProfileType) => ({ type: 'proflie/SET_USER_PROFILE', profile } as const),\n    savePhotosSuccess: (photos: PhotosType) => ({ type: 'profile/SET_PHOTOS', photos } as const),\n    setStatus: (status: string) => ({ type: 'proflie/SET_STATUS', status } as const)\n}\n\n\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\n    let data = await profileApi.getProfile(userId)\n    dispatch(actions.setUserProfile(data))\n}\nexport const savePhoto = (photo: File): ThunkType => async (dispatch) => {\n    let data = await profileApi.updatePhoto(photo)\n    if (data.resultCode === 0) {\n        dispatch(actions.savePhotosSuccess(data.data.photos))\n    }\n\n}\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch, getState: any) => {\n    const userId = getState().auth.userId\n    const data = await profileApi.updateProfile(profile)\n    if (data.resultCode === 0) {\n        dispatch(getUserProfile(userId))\n    } else {\n        dispatch(stopSubmit(\"ProfileData\", { _error: data.messages[0] }))\n\n        return Promise.reject(data.messages[0])\n    }\n}\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\n    let data = await profileApi.getStatus(userId)\n    dispatch(actions.setStatus(data))\n}\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\n    try {\n        let data = await profileApi.updateStatus(status)\n        if (data.resultCode === ResultCodeEnum.success) {\n            dispatch(actions.setStatus(status))\n        }\n    } catch (error) {\n        alert(error)\n    }\n}\n\nexport default profileReducer\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actions>\ntype ThunkType =BaseThunkType<ActionsType | FormAction>\n\nexport type ContactsType ={\n    github: string \n    vk: string\n    facebook: string\n    instagram: string\n    twitter: string\n    website: string\n    youtube: string\n    mainLink: string\n}\nexport type PhotosType = {\n    small: string\n    large: string\n}\nexport type ProfileType = {\n    userId: number \n    aboutMe: string\n    lookingForAJob: boolean\n    lookingForAJobDescription: string\n    fullName: string\n    contacts: ContactsType\n    photos: PhotosType\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsDualRing\":\"preloader_ldsDualRing__2J3s8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"header__logo\":\"Header_header__logo___qdaS\",\"header__menu\":\"Header_header__menu__rwb1k\",\"header__item\":\"Header_header__item__TlfzP\",\"link\":\"Header_link__1uLZ-\",\"active\":\"Header_active__3GX0s\",\"authTrue\":\"Header_authTrue__3y1A7\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ThunkAction } from \"redux-thunk\"\nimport { GetAuthUserData } from \"./auth-Reducer\"\nimport { AppStateType, InferActionsTypes } from \"./redux-store\"\n\n\n\nlet initialState = {\n    initialized: false\n}\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actions>\n\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'app/INITIALIZED_SUCCESS':\n            return {\n                ...state, initialized: true,\n            }\n\n        default:\n            return state\n    }\n}\n\nconst actions = {\n    setInitialized: () =>({ type: 'app/INITIALIZED_SUCCESS' } as const)\n}\n\ntype ThunkActionType = ThunkAction<void, AppStateType, unknown, ActionsType>\n\n\nexport const initializeApp = (): ThunkActionType => (dispatch) => {\n    let promise = dispatch(GetAuthUserData())\n    Promise.all([promise]).then(() => {\n        dispatch(actions.setInitialized())\n    }\n    )\n}\n\nexport default appReducer","const ADD_POST = 'news/ADD-POST'\n\nexport type PostType = {\n    idProfile: number\n    author: string\n    text: string\n    icon: string\n    img: string | undefined\n}\nexport type InitialStateType = {\n    posts: Array<PostType>\n}\nlet initialState: InitialStateType = {\n    posts: [\n        { idProfile: 0, author: 'Trish Una', text: 'hey, its mario', icon: 'https://sun9-34.userapi.com/impf/c845420/v845420775/bafaa/hP5ZTk4e-O0.jpg?size=200x200&quality=96&proxy=1&sign=c915e9a943591bf8db59656c689429e4&type=album', img: \"https://atulhost.com/wp-content/uploads/2019/06/anime-wallpaper-hd-07-1536x864.jpg\" },\n        { idProfile: 1, author: 'Josuke Higashikata', text: 'pam, param, pam-pam', icon: 'https://sun9-46.userapi.com/impf/c847124/v847124775/b8f1c/vqovdaYXuwY.jpg?size=250x250&quality=96&proxy=1&sign=9a228fea6ba6a978a4828d27a37a8736&type=album', img: \"https://wallpaper-mania.com/wp-content/uploads/2018/09/High_resolution_wallpaper_background_ID_77702165506.jpg\" },\n        { idProfile: 2, author: 'Koichi Hirose', text: 'hello, world', icon: 'https://sun9-59.userapi.com/impf/c848624/v848624775/462a0/Dr0XNNLUSDA.jpg?size=250x250&quality=96&proxy=1&sign=0182183292e77447f13b8bfd3ca5626a&type=album', img: \"https://wallpapertag.com/wallpaper/full/6/d/8/465140-beautiful-anime-wallpaper-2560x1600-samsung-galaxy.jpg\" },\n    ]\n}\nconst newsReducer = (state = initialState, action: any): InitialStateType => {\n    switch (action.type) {\n        case ADD_POST:\n            return {\n                ...state,\n                posts: [\n                    {   icon: 'https://sun9-34.userapi.com/impf/c845420/v845420775/bafaa/hP5ZTk4e-O0.jpg?size=200x200&quality=96&proxy=1&sign=c915e9a943591bf8db59656c689429e4&type=album',\n                        text: action.text,\n                        idProfile: state.posts.length , author: 'Trish Una',\n                        img: undefined\n                    },\n                    ...state.posts,\n                ]\n            }\n        default:\n            return state;\n    }\n    \n}\ntype AddPostActionType = {\n    type: typeof ADD_POST;\n    text: string;\n}\nexport const addPost = (text: string): AddPostActionType => ({type:ADD_POST, text})\n\nexport default newsReducer","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { PostType } from '../../../redux/news-Reducer';\nimport style from './Post.module.scss'\n\nconst Post: React.FC<PostType> = (props) => {\n    \n    return (\n        <div className={style.post}>\n            <div className={style.header}>\n                <div className={style.icon}>\n                    <img src={props.icon} alt=\"\" />\n                </div>\n                    <NavLink to={\"/\" + props.idProfile}>\n                <div className={style.author}>{props.author}</div>\n                </NavLink>\n                \n            </div> \n            <div className={style.image}>\n              <img src={props.img} alt=''/>\n            </div>\n            <div className={style.text}>\n                {props.text}\n            </div>\n        </div>\n    )\n}\n\n\nexport default Post;","import { FC } from 'react';\nimport style from './News.module.scss'\nimport Post from '../../common/Post/Post'\nimport { InjectedFormProps, reduxForm } from 'redux-form';\nimport { maxLength100, required } from '../../../utils/validators/validators';\nimport { createField, Textarea } from '../../common/FormsControls/FormsControls';\nimport { PostType } from '../../../redux/news-Reducer';\n\ntype PropsType = {\n\tposts: Array<PostType>\n\taddPost: (text: string) => void\n}\n\n\nconst PostForm: React.FC<InjectedFormProps<PostType>> = (props) => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit} className={style.addPost}>\n\t\t\t{createField('text', Textarea, [required, maxLength100], \"what's new\",\n\t\t\t\t{ className: style.Textarea })}\n\t\t\t<button className={style.btnPost}>post</button>\n\t\t</form>\n\t)\n}\nconst PostReduxForm = reduxForm<PostType>({\n\tform: 'post'\n})(PostForm)\n\nconst News: FC<PropsType> = (props) => {\n\n\tconst onSubmit = (formData: PostType) => {\n\t\tprops.addPost(formData.text)\n\t}\n\tlet PostItems = props.posts.map(post => <Post key={post.idProfile} idProfile={post.idProfile}\n\t\ticon={post.icon} author={post.author} text={post.text} img={post.img} />)\n\treturn (\n\t\t<div className={style.NewsPage}>\n\t\t\t<PostReduxForm onSubmit={onSubmit} />\n\t\t\t{PostItems}\n\t\t</div>\n\t)\n}\n\nexport default News;\n","import { addPost } from '../../../redux/news-Reducer'\nimport { connect } from 'react-redux';\nimport News from './News';\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\nimport { AppStateType } from '../../../redux/redux-store';\n\n\nlet mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tposts: state.news.posts,\n\t}\n}\nlet mapDispatchToProps = {\n\taddPost\n}\nexport default compose<React.ComponentType>(\n\tconnect(mapStateToProps, mapDispatchToProps),\n\twithAuthRedirect\n)(News);\n","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport style from './Header.module.scss'\n\ntype PropsType = {\n  isAuth: boolean\n  logout: () => void\n}\n\nconst Header: FC<PropsType> = (props) => {\n        return (\n        <div className={style.header}>\n        <div className={style.header__logo}>\n            <img src=\"https://c10.patreonusercontent.com/3/eyJ3Ijo0MDB9/patreon-media/p/reward/2295592/7db885da26204a358ef0068310b6da3e/1.png?token-time=2145916800&token-hash=0mK1H_AvY9axo7l0XUtd_rkagRLxY4OhCd-5Pd3xZGg%3D\" alt=\"\"/>\n\n        </div>\n\t\t<div className={style.header__menu}>\n            <div className={style.header__item}>\n                <NavLink to='/Users' activeClassName={style.active}\n                  className={style.link}>Users</NavLink>\n            </div>\n            <div className={style.header__item}>\n                {props.isAuth ? <div className={style.authTrue}>\n                   <button onClick={props.logout}>Log out\n                     </button>\n                    </div>:\n                <NavLink to='/Login' activeClassName={style.active}\n                  className={style.link}>Login</NavLink>\n                }\n            </div>\n            </div>\n      </div>\n    )\n}\n\nexport default Header;\n","import { logout } from '../../redux/auth-Reducer'\nimport React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { AppStateType } from '../../redux/redux-store';\nimport Header from './Header';\n\ntype PropsType = {\n    isAuth: boolean\n    logout: () => void\n  }\nconst HeaderContainer: FC<PropsType> = (props) => {\n    return <Header {...props} />\n}\n\nlet mapStateToProps = (state: AppStateType) => ({\n    isAuth: state.auth.isAuth,\n})\n\nexport default connect(mapStateToProps, {\n    logout,\n})(HeaderContainer)\n\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport style from './Navbar.module.scss'\n\ntype PropsType = {\n\tlink: string\n\tlabel: string\n}\nconst NavbarItem: React.FC<PropsType>= (props) => {\n\treturn (\n\t\t\t<NavLink to={props.link} activeClassName={style.active} className={style.navbar__label}>{props.label}</NavLink>\n\t)\n}\n\nexport default NavbarItem;\n","import React from 'react';\nimport style from './Navbar.module.scss';\nimport NavbarItem from './NavbarItem'\nconst Navbar = React.memo(() => {\n\treturn (\n\t\t<div className={style.navbar}>\n\t\t\t<div className={style.navbar__list}>\n\t\t\t\t<NavbarItem label={'News'} link={'/News'} />\n\t\t\t\t<NavbarItem label={'Messenger'} link={'/Messenger'} />\n\t\t\t\t<NavbarItem label={'Friends'} link={'/Friends'} />\n\t\t\t\t<NavbarItem label={'Profile'} link={'/Profile'} />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n)\nexport default Navbar;\n","import { Action, applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport authReducer from \"./auth-Reducer\";\nimport messageReducer from \"./message-Reduser\";\nimport newsReducer from \"./news-Reducer\";\nimport profileReducer from \"./profile-Reducer\";\nimport usersReducer from \"./users-Reducer\";\nimport appReducer from \"./app-Reducer\";\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\nimport { reducer as formReducer } from 'redux-form'\n\n\nlet rootReducer = combineReducers({\n    news: newsReducer,\n    messenger: messageReducer,\n    profilePage: profileReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    app: appReducer,\n    form: formReducer\n})\n\ntype RootReducerType = typeof rootReducer\nexport type AppStateType = ReturnType<RootReducerType>\n\ntype PropertiesTypes<T> = T extends {[key: string]: infer U} ? U : never\nexport type InferActionsTypes<T extends {[key: string]: (...args: any)=> any}> =ReturnType<PropertiesTypes<T>>\n\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\n\n\n//@ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\n//@ts-ignore\nwindow.store = store;\n\nexport default store","import React, { Suspense } from 'react'\nimport Preloader from '../common/Preloader/preloader'\n\nconst withSuspense = (Component) => {\n    return (props) => {\n        return (\n            <Suspense fallback={<Preloader />}>\n                <Component {...props} />\n\n            </Suspense>\n        )\n    }\n}\nexport default withSuspense","import React from 'react';\nimport {  HashRouter, Redirect, Route, Switch, withRouter } from 'react-router-dom';\nimport { initializeApp } from './redux/app-Reducer'\nimport NewsConteiner from './components/Pages/News/NewsConteiner';\nimport HeaderContainer from './components/Header/HeaderContainer';\n\nimport style from './App.module.scss'\nimport Navbar from './components/Pages/Navbar/Navbar';\nimport { compose } from 'redux';\nimport { connect, Provider } from 'react-redux';\nimport Preloader from './components/common/Preloader/preloader';\nimport store, { AppStateType } from './redux/redux-store'\nimport withSuspense from './components/hoc/withSuspense';\nconst MessengerConteiner = React.lazy(() => import('./components/Pages/Messenger/MessengerConteiner'));\nconst Users = React.lazy(() => import('./components/Pages/Users/Users'));\nconst ProfileConteiner = React.lazy(() => import('./components/Pages/Profile/ProfileConteiner'));\nconst Login = React.lazy(() => import('./components/Pages/Login/Login'));\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>\n\ntype DispatchPropsType = {\n\tinitializeApp: () => void\n}\n\nclass App extends React.Component<MapPropsType & DispatchPropsType> {\n\tcatchAllUnhandledErrors = (e: PromiseRejectionEvent) =>{\n\t\talert('some error')\n\t}\n\tcomponentDidMount() {\n\t\tthis.props.initializeApp()\n\t\twindow.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\n\t}\n\tcomponentWillUnmount(){\n\t\twindow.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\n\t}\n\trender() {\n\t\tif (!this.props.initialized) {\n\t\t\treturn <Preloader />\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={style.wrapper}>\n\t\t\t\t<HeaderContainer />\n\t\t\t\t<div className={style.body}>\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<div className={style.content}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/' render={() => { return <Redirect to={'/Profile'}/>}} />\n\t\t\t\t\t\t<Route path='/Messenger' render={withSuspense(MessengerConteiner)}/>\n\t\t\t\t\t\t<Route path='/Users' render={withSuspense(Users)} />\n\t\t\t\t\t\t<Route path='/News' render={() => <NewsConteiner />} />\n\t\t\t\t\t\t<Route path='/Login' render={withSuspense(Login)} />\n\t\t\t\t\t\t<Route path='/Profile/:userId?' render={withSuspense(ProfileConteiner)} />\n\t\t\t\t\t\t<Route path='/Friends' render={() => <div>page doesn't exit</div> } />\n\t\t\t\t\t\n\t\t\t\t\t\t<Route path='*' render={() => { return <div>404 not found</div>}} />\n\t\t\t\t\t\t\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tinitialized: state.app.initialized\n\t}\n}\n\nlet AppContainer = compose<React.ComponentType>(\n\twithRouter,\n\tconnect(mapStateToProps, { initializeApp }),\n)(App)\n\nconst MainApp = () => {\n\treturn (\n\t\t<HashRouter>\n\t\t\t<Provider store={store}>\n\t\t\t\t<AppContainer />\n\t\t\t</Provider>\n\t\t</HashRouter>\n\t)\n}\nexport default MainApp","import './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\n\nReactDOM.render(\n      <MainApp />,\n  document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__sP_5D\",\"text\":\"Post_text__29PmG\",\"image\":\"Post_image__3MfY_\",\"header\":\"Post_header__FfTUh\",\"author\":\"Post_author__-DEDu\",\"icon\":\"Post_icon__2y6GQ\"};","import { instance, ResultCodeEnum, ResultCodeCaptchaEnum, APIResponseType } from \"./api\";\n\n\n type MeResponseType = {\n        id: number\n        email: string\n        login: string\n}\n type LoginResponseType = {\n        userId: number\n}\n \nexport const authApi = ({\n    me() {\n        return instance.get<APIResponseType<MeResponseType>>(`auth/me`).then(res => res.data);\n    },\n    login(email: string, password: string, rememberMe = false, captcha: string) {\n        return instance.post<APIResponseType<LoginResponseType, ResultCodeCaptchaEnum & ResultCodeEnum>>(`auth/login`, {\n            email,\n            password,\n            rememberMe,\n            captcha\n        }).then(res => res.data);\n    },\n    logout() {\n        return instance.delete(`auth/login`).then(res => res.data);\n    },\n    getCaptcha() {\n        return instance.get(`security/get-captcha-url`).then(res => res.data);\n    }\n});\n","import { FormAction, stopSubmit } from \"redux-form\"\nimport { ResultCodeCaptchaEnum, ResultCodeEnum } from \"../api/api\"\nimport { authApi } from \"../api/authApi\"\nimport { BaseThunkType, InferActionsTypes } from \"./redux-store\"\n\n\nlet initialState = {\n    userId: null as (number | null),\n    login: null as null | string,\n    email: null as null | string,\n    isAuth: false,\n    captcha: null as null | string\n}\n\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'auth/SET_AUTH_USER_DATA':\n        case 'auth/SET_CAPTCHA':\n            return {\n                ...state, ...action.payload,\n            }\n        default:\n            return state\n    }\n}\n\nexport const actions = {\n    setAuthUserData: (userId: number | null, login: string | null, email: string | null, isAuth: boolean) =>\n    ({ type: 'auth/SET_AUTH_USER_DATA', payload: { userId, login, email, isAuth } } as const),\n    setCaptcha: (captcha: string) =>\n    ({ type:  'auth/SET_CAPTCHA', payload: { captcha }} as const)\n}\n\nexport const GetAuthUserData = ():ThunkType => async (dispatch) => {\n    let response = await authApi.me()\n    if (response.resultCode === ResultCodeEnum.success) {\n        let { id, login, email } = response.data\n        dispatch(actions.setAuthUserData(id, login, email, true))\n    }\n}\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType =>\n    async (dispatch) => {\n        let response = await authApi.login(email, password, rememberMe, captcha)\n        if (response.resultCode === ResultCodeEnum.success) {\n            dispatch(GetAuthUserData())\n        }\n        else {\n            if (response.resultCode === ResultCodeCaptchaEnum.captchaIsRequired) {\n                dispatch(getCaptcha())\n            }\n            let message = response.messages.length > 0 ? response.messages[0] : \"Some error\"\n            dispatch(stopSubmit(\"login\", { _error: message }))\n        }\n    }\nexport const logout = (): ThunkType => async (dispatch) => {\n    let response = await authApi.logout()\n    if (response.resultCode === ResultCodeEnum.success) {\n        dispatch(actions.setAuthUserData(null, null, null, false))\n    }\n}\nexport const getCaptcha = (): ThunkType => async (dispatch) => {\n    let response = await authApi.getCaptcha()\n    dispatch(actions.setCaptcha(response.url))\n}\nexport default authReducer\n\n\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actions>\ntype ThunkType =BaseThunkType<ActionsType | FormAction>\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__3UTsQ\",\"navbar__list\":\"Navbar_navbar__list__rNtXp\",\"navbar__label\":\"Navbar_navbar__label__1ksUZ\",\"active\":\"Navbar_active__cyJMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewsPage\":\"News_NewsPage__1phn8\",\"addPost\":\"News_addPost__351wZ\",\"Textarea\":\"News_Textarea__17WQe\",\"btnPost\":\"News_btnPost__2qIZu\"};","import style from './preloader.module.scss'\n\n\nconst Preloader = () => {\n    return (\n        <div className={style.ldsDualRing}></div>\n    )\n}\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__RCHjb\",\"body\":\"App_body__2a4FT\",\"content\":\"App_content__1Wt3K\"};","import React from 'react'\nimport { Field, WrappedFieldProps } from 'redux-form'\nimport { ValidatorType } from '../../../utils/validators/validators'\nimport style from './FormsControls.module.scss'\n\n\nexport const inputElement: (InputType: React.ComponentType) => React.FC<any> =\n    (InputType) => ({ input, meta, ...restProps }) => {\n        const hasError = meta.touched && meta.error\n        return (\n            <div className={style.inputForm}>\n                <InputType  {...input}  {...restProps} className={restProps.className + ' '\n            + (hasError && style.error)}/>\n            </div>\n        )\n    }\n\nexport function createField<FormKeysType extends string>(name: FormKeysType,\n    component: React.FC<WrappedFieldProps>,\n    validators: Array<ValidatorType>,\n    placeholder: string | null,\n    props?: {}) {\n    return (\n        <div>\n            <Field name={name} component={component}\n                validate={validators} placeholder={placeholder}\n                {...props} />\n        </div>\n    )\n}\n\nexport type GetStringKeys<T> = Extract<keyof T, string>\n\n\nexport const Input = inputElement((props) => { return <input {...props} /> })\nexport const Textarea = inputElement((props) => { return <textarea {...props} /> })\n","export const required: ValidatorType = (value) => {\n    if (value) return undefined\n    return 'Required field'\n}\nexport const maxLengthCreator = (maxLength: number):ValidatorType => (value) => {\n    if (value.length < maxLength) return undefined\n    return `max length is ${maxLength}`\n}\n\nexport type ValidatorType = (value: string) => undefined | string\n\n\nexport const maxLength100 = maxLengthCreator(100)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputForm\":\"FormsControls_inputForm__yStTl\",\"error\":\"FormsControls_error__1QSyu\"};"],"sourceRoot":""}