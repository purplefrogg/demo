{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Pages/Profile/Profile.module.scss","components/Pages/Profile/PofileStatus/ProfileStatusWithHooks.tsx","components/Pages/Profile/ProfileDataForm.tsx","components/Pages/Profile/ProfileInfo.tsx","components/Pages/Profile/Profile.tsx","components/Pages/Profile/ProfileConteiner.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","isOwner","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileReduxForm","reduxForm","form","handleSubmit","error","profile","onSubmit","className","style","createField","Input","Info__item","Textarea","lookingForAJob","type","editInput","keys","contacts","map","key","ProfileData","activateEditMode","fullName","aboutMe","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","saveProfile","Info","initialValues","formData","then","catch","Profile","ProfilePage","avatar","src","photos","large","alt","target","files","savePhoto","ProfileConteiner","userId","this","match","params","myId","history","getUserProfile","getStatus","refreshProfile","prevProps","React","Component","mapDispatchToProps","compose","connect","state","profilePage","auth","withRouter"],"mappings":"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","file":"static/js/6.21cec2fa.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfilePage\":\"Profile_ProfilePage__a2Ajs\",\"avatar\":\"Profile_avatar__17tV0\",\"Info\":\"Profile_Info__1-iTM\",\"Info__item\":\"Profile_Info__item__VPtOc\",\"editInput\":\"Profile_editInput__2Nu_l\",\"error\":\"Profile_error__1PbrN\",\"myPosts\":\"Profile_myPosts__1iI_W\"};","import React, { ChangeEvent, useEffect, useState } from 'react';\n\ntype PropsType = {\n\tisOwner: boolean\n\tstatus: string\n\tupdateStatus: (status: string) => void\n}\n\nconst ProfileStatusWithHooks: React.FC<PropsType> = (props) => {\n\n\tlet [editMode, setEditMode] = useState(false)\n\tlet [status, setStatus] = useState(props.status)\n\tuseEffect(() => {\n\t\tsetStatus(props.status)\n\t}, [props.status])\n\n\tconst activateEditMode = () => {\n\t\tif(props.isOwner){\n\t\t\tsetEditMode(true)\n\t\t} \n\t}\n\tconst deactivateEditMode = () => {\n\t\t\n\t\tprops.updateStatus(status)\n\t\tsetStatus(props.status)\n\t\tsetEditMode(false)\n\t}\t\n\tconst onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetStatus(e.currentTarget.value)\n\t}\n\treturn (\n\t\t<div>\n\t\t\t{!editMode &&\n\t\t\t\t<div onClick={activateEditMode}>\n\t\t\t\t\tstatus: {status}\n\t\t\t\t</div>}\n\t\t\t{editMode &&\n\t\t\t\t<div>\n\t\t\t\t\tstatus:\n\t\t\t\t\t<input autoFocus={true} onBlur={deactivateEditMode}\n\t\t\t\t\t\tonChange={onStatusChange} value={status} />\n\t\t\t\t</div>}\n\t\t</div>\n\t)\n}\n\n\nexport default ProfileStatusWithHooks;\n","import React from 'react';\nimport style from './Profile.module.scss';\nimport { createField, GetStringKeys, Input, Textarea } from '../../common/FormsControls/FormsControls';\nimport { InjectedFormProps, reduxForm } from 'redux-form';\nimport { ProfileType } from '../../../redux/profile-Reducer';\n\ntype PropsType = {\n\tprofile: ProfileType\n\n}\ntype ProfileTypeKeys = GetStringKeys<ProfileType>\n\nlet ProfileDataForm: React.FC<InjectedFormProps<ProfileType, PropsType> & PropsType> =\n\t({ handleSubmit, error, profile, ...props }) => {\n\t\treturn (\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<button>save</button>\n\t\t\t\t{error && <div className={style.error}>\n\t\t\t\t\t{error}\n\t\t\t\t</div>}\n\t\t\t\t<div>Full name: {createField<ProfileTypeKeys>(\"fullName\", Input, [], \"full name\")}</div>\n\t\t\t\t<div className={style.Info__item}>about me:\n\t\t\t{createField<ProfileTypeKeys>(\"aboutMe\", Textarea, [], \"about me\")}</div>\n\n\t\t\t\t<div className={style.Info__item}>looking for a job: {profile.lookingForAJob ? \"yes\" : \"no\"}\n\t\t\t\t\t{createField<ProfileTypeKeys>(\"lookingForAJob\", Input, [], \"looking for a job\", { type: \"checkbox\", className: style.editInput })}</div>\n\t\t\t\t<div className={style.Info__item}>looking for a job description:\n\t\t\t{createField<ProfileTypeKeys>('lookingForAJobDescription', Textarea, [], \"job Description\")}</div>\n\n\t\t\t\t{Object.keys(profile.contacts).map(key => {\n\t\t\t\t\treturn <div key={key}>\n\t\t\t\t\t\t{key}: {createField(`contacts.${key}`, Input, [], key)}\n\t\t\t\t\t</div>\n\t\t\t\t})}\n\t\t\t</form>\n\t\t)\n\t}\nconst ProfileReduxForm = reduxForm<ProfileType, PropsType>({\n\tform: 'ProfileData'\n})(ProfileDataForm)\n\n\nexport default ProfileReduxForm;\n","import React, { useState } from 'react';\nimport { ContactsType, ProfileType } from '../../../redux/profile-Reducer';\nimport ProfileStatusWithHooks from './PofileStatus/ProfileStatusWithHooks';\nimport style from './Profile.module.scss';\nimport ProfileReduxForm from './ProfileDataForm';\n\ntype ProfileInfiPropsType = {\n\tprofile: ProfileType\n\tisOwner: boolean\n\tstatus: string\n\tupdateStatus: (status: string) => void\n    saveProfile: (profile: ProfileType) => Promise<any>\n}\n\nconst ProfileInfo: React.FC<ProfileInfiPropsType> = ({ profile, isOwner, saveProfile, ...props }) => {\n\tlet [editMode, setEditMode] = useState(false)\n\tconst activateEditMode = () => {\n\t\tsetEditMode(true)\n\t}\n\tconst onSubmit = (formData: ProfileType) => {\n\t\t\n\t\tsaveProfile(formData).then(() => {\n\t\t\tsetEditMode(false)\n\t\t}).catch(() => { })\n\t\t//.then(()=>{setEditMode(false)},()=>{})\n\t}\n\treturn (<div className={style.Info}>\n\n\t\t<div className={style.Info__item}> {<ProfileStatusWithHooks status={props.status} isOwner={isOwner}\n\t\t\tupdateStatus={props.updateStatus} />} </div>\n\n\t\t{editMode\n\t\t\t? <ProfileReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\n\t\t\t: <ProfileData profile={profile} activateEditMode={activateEditMode} isOwner={isOwner} />}\n\t</div>\n\t)\n}\n\n\n\ntype ProfilePropsType = {\n\tprofile: ProfileType\n\tisOwner: boolean\n\tactivateEditMode: () => void\n}\nconst ProfileData: React.FC<ProfilePropsType> = ({ profile, isOwner, activateEditMode }) => {\n\treturn (\n\t\t<>\n\t\t\t{isOwner && <button onClick={activateEditMode}>edit</button>}\n\t\t\t<div className={style.Info__item}>Full name: {profile.fullName}</div>\n\t\t\t<div className={style.Info__item}>about me: {profile.aboutMe}</div>\n\t\t\t<div className={style.Info__item}>looking for a job: {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\n\t\t\t<div className={style.Info__item}>looking For A Job Description: {profile.lookingForAJobDescription}</div>\n\t\t\t{Object.keys(profile.contacts).map(key => {\n\t\t\t\treturn <Contact contactTitle={key} key={key} contactValue={profile.contacts[key as keyof  ContactsType]} />\n\t\t\t})}\n\t\t</>\n\t)\n}\n\n\n\nexport const Contact: React.FC<{ contactTitle: string, contactValue: string }>\n\t= ({ contactTitle, contactValue }) => {\n\t\treturn (\n\t\t\t<div className={style.Info__item}>{contactTitle}: {contactValue}</div>\n\t\t)\n\t}\n\nexport default ProfileInfo;\n","import React, { ChangeEvent } from 'react';\nimport { ProfileType } from '../../../redux/profile-Reducer';\nimport Preloader from '../../common/Preloader/preloader';\nimport style from './Profile.module.scss'\nimport ProfileInfo from './ProfileInfo';\n \n\ntype PropsType = {\n\tprofile: ProfileType | null\n\tstatus: string\n\tmyId: number | null\n\tisOwner: boolean\n\n\tgetUserProfile: (userId: number) => void\n    getStatus: (userId: number) => void\n    updateStatus: (status: string) => void\n    saveProfile: (profile: ProfileType) => Promise<any>\n\n\tsavePhoto: (photo: File)=> void\n}\n\nconst Profile: React.FC<PropsType> = (props) => {\n\tconst changeProfilePhoto = (e: ChangeEvent<HTMLInputElement>) =>{\n\t\tif (e.target.files && e.target.files.length) {\n            props.savePhoto(e.target.files[0]);\n        }\n\t}\n\tif(!props.profile){\n\t\treturn <Preloader></Preloader>\n\t}\n\telse\n\treturn (\n\t\t<div className={style.ProfilePage}>\n\t\t\t<div className={style.avatar}>\n\t\t\t<img  src={props.profile.photos.large != null ? props.profile.photos.large : 'https://sun9-34.userapi.com/impf/c845420/v845420775/bafaa/hP5ZTk4e-O0.jpg?size=200x200&quality=96&proxy=1&sign=c915e9a943591bf8db59656c689429e4&type=album'}\n\t\t\t\t\t\t\talt=\"\" />\n\t\t\t</div>\n\t\t\t\n\t\t\t<ProfileInfo profile={props.profile} isOwner={props.isOwner} saveProfile={props.saveProfile}\n\t\t\tstatus={props.status} updateStatus={props.updateStatus} />\n\t\t\t{props.isOwner && <input onChange={changeProfilePhoto} type=\"file\"/>}\n\t\t\t\n\t\t</div>\n\t)\n}\n\nexport default Profile;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { getUserProfile, getStatus, updateStatus, saveProfile, ProfileType, savePhoto} from '../../../redux/profile-Reducer'\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { AppStateType } from '../../../redux/redux-store';\n\ntype MapPropsType = {\n\tprofile: ProfileType | null\n\tstatus: string\n\tmyId: number | null\n}\n\ntype MapDispatchPropsType = {\n\tgetUserProfile: (userId: number) => void\n    getStatus: (userId: number) => void\n    updateStatus: (status: string) => void\n    saveProfile: (profile: ProfileType) => Promise<any>\n\tsavePhoto: (photo: File)=> void\n}\ntype OwmPropsType = {\n\tmatch: any\n\thistory: any\n}\n\ntype PropsType = MapDispatchPropsType & MapPropsType & OwmPropsType\nclass ProfileConteiner extends React.Component<PropsType> {\n\trefreshProfile(){\n\t\tlet userId = this.props.match.params.userId\n\t\tif (!userId) {\n\t\t\tuserId = this.props.myId\n\t\t\tif (!userId) {\n\t\t\t\tthis.props.history.push('/Login') \n\t\t\t}\n\t\t}\n\t\tif (userId !== null) {\n\t\t\tthis.props.getUserProfile(userId)\n\t\t\tthis.props.getStatus(userId)\n\t\t}\t\t\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.refreshProfile()\n\t}\n\tcomponentDidUpdate(prevProps: PropsType){\n\t\tif(this.props.match.params.userId !== prevProps.match.params.userId){\n\t\t\tthis.refreshProfile()\n\t\t}\n\t\t\n\t}\n\t\n\trender() {\n\t\treturn (<Profile profile={this.props.profile} {...this.props}\n\t\tisOwner={!this.props.match.params.userId }/>)\n\t}\n}\n\n\nlet mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tprofile: state.profilePage.profile,\n\t\tmyId: state.auth.userId,\n\t\tstatus: state.profilePage.status\n\t}\n}\nlet mapDispatchToProps = {\n\tgetUserProfile,\n\tgetStatus,\n\tupdateStatus,\n\tsaveProfile,\n\tsavePhoto\n}\n\nexport default compose<React.ComponentType>(\n\tconnect(mapStateToProps, mapDispatchToProps),\n\twithRouter,\n\t\n)(ProfileConteiner)\n"],"sourceRoot":""}